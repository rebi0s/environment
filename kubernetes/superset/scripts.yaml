apiVersion: v1
kind: ConfigMap
metadata:
  name: superset-scripts
data:
  docker-bootstrap.sh: |
    #!/usr/bin/env bash
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #

    set -eo pipefail

    REQUIREMENTS_LOCAL="/app/docker/requirements-local.txt"
    # If Cypress run – overwrite the password for admin and export env variables
    if [ "$CYPRESS_CONFIG" == "true" ]; then
        export SUPERSET_CONFIG=tests.integration_tests.superset_test_config
        export SUPERSET_TESTENV=true
        export SUPERSET__SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://superset:superset@db:5432/superset
    fi
    #
    # Make sure we have dev requirements installed
    #
    if [ -f "${REQUIREMENTS_LOCAL}" ]; then
      echo "Installing local overrides at ${REQUIREMENTS_LOCAL}"
      pip install --no-cache-dir -r "${REQUIREMENTS_LOCAL}"
    else
      echo "Skipping local overrides"
    fi

    case "${1}" in
      worker)
        echo "Starting Celery worker..."
        # setting up only 2 workers by default to contain memory usage in dev environments
        celery --app=superset.tasks.celery_app:app worker -O fair -l INFO --concurrency=${CELERYD_CONCURRENCY:-2}
        ;;
      beat)
        echo "Starting Celery beat..."
        rm -f /tmp/celerybeat.pid
        celery --app=superset.tasks.celery_app:app beat --pidfile /tmp/celerybeat.pid -l INFO -s "${SUPERSET_HOME}"/celerybeat-schedule
        ;;
      app)
        echo "Starting web app (using development server)..."
        flask run -p 8088 --with-threads --reload --debugger --host=0.0.0.0
        ;;
      app-gunicorn)
        echo "Starting web app..."
        /usr/bin/run-server.sh
        ;;
      *)
        echo "Unknown Operation!!!"
        ;;
    esac

  docker-init.sh: |
    #!/usr/bin/env bash
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    set -e

    #
    # Always install local overrides first
    #
    /app/docker/docker-bootstrap.sh

    STEP_CNT=4

    echo_step() {
    cat <<EOF

    ######################################################################


    Init Step ${1}/${STEP_CNT} [${2}] -- ${3}


    ######################################################################

    EOF
    }
    ADMIN_PASSWORD="${ADMIN_PASSWORD:-admin}"
    # If Cypress run – overwrite the password for admin and export env variables
    if [ "$CYPRESS_CONFIG" == "true" ]; then
        ADMIN_PASSWORD="general"
        export SUPERSET_CONFIG=tests.integration_tests.superset_test_config
        export SUPERSET_TESTENV=true
        export SUPERSET__SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://superset:superset@db:5432/superset
    fi
    # Initialize the database
    echo_step "1" "Starting" "Applying DB migrations"
    superset db upgrade
    echo_step "1" "Complete" "Applying DB migrations"

    # Create an admin user
    echo_step "2" "Starting" "Setting up admin user ( admin / $ADMIN_PASSWORD )"
    superset fab create-admin \
                  --username admin \
                  --firstname Superset \
                  --lastname Admin \
                  --email admin@superset.com \
                  --password "$ADMIN_PASSWORD"
    echo_step "2" "Complete" "Setting up admin user"
    # Create default roles and permissions
    echo_step "3" "Starting" "Setting up roles and perms"
    superset init
    echo_step "3" "Complete" "Setting up roles and perms"

    if [ "$SUPERSET_LOAD_EXAMPLES" = "yes" ]; then
        # Load some data to play with
        echo_step "4" "Starting" "Loading examples"
        # If Cypress run which consumes superset_test_config – load required data for tests
        if [ "$CYPRESS_CONFIG" == "true" ]; then
            superset load_test_users
            superset load_examples --load-test-data
        else
            superset load_examples --force
        fi
        echo_step "4" "Complete" "Loading examples"
    fi

  docker-frontend.sh: |
    #!/usr/bin/env bash
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    set -e

    # Packages needed for puppeteer:
    if [ "$PUPPETEER_SKIP_CHROMIUM_DOWNLOAD" = "false" ]; then
        apt update
        apt install -y chromium
    fi

    if [ "$BUILD_SUPERSET_FRONTEND_IN_DOCKER" = "true" ]; then
        echo "Building Superset frontend in dev mode inside docker container"
        cd /app/superset-frontend

        echo "Running `npm install`"
        npm install

        echo "Running frontend"
        npm run dev

    else
        echo "Skipping frontend build steps - YOU NEED TO RUN IT MANUALLY ON THE HOST!"
        echo "https://superset.apache.org/docs/contributing/development/#webpack-dev-server"
    fi



